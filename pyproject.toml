[build-system]
requires = ["setuptools>=77", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "processit"
dynamic = ["version"]
readme = "README.md"
description = "Lightweight progress utilities for sync/async workloads"
requires-python = ">=3.12"
authors = [{name = "Vicente Ruiz"}]
license = "MIT"
license-files = ["LICENSE"]
dependencies = []
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
  "Typing :: Typed",
]

[tool.setuptools.dynamic]
version = {attr = "processit._version.__version__"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
processit = ["py.typed"]

[tool.setuptools]
include-package-data = true

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-asyncio>=0.24",
    "pytest-cov>=5.0",
    "ruff>=0.5.0",
    "mypy>=1.10",
]

[tool.ruff]
# Exclude directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".vscode",
    "build",
    "dist",
    "site-packages",
    "env",
]
respect-gitignore = true

line-length = 79
indent-width = 4
target-version = "py313"
src = ["src", "tests"]


[tool.ruff.lint]

select = [
    "E",     # pycodestyle
    "D",     # pydocstyle
    "F",     # Pyflakes
    "I",     # isort
    "N",     # pep8-naming
    "PL",    # pylint
    "UP",    # pyupgrade
    "A",     # flake8-builtins
    "ASYNC", # flake8-async
    "S",     # flake8-bandit
    "FBT",   # flake8-boolean-trap
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "EM",    # flake8-errmsg
    "FA",    # flake8-future-annotations
    "ISC",   # flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLOT",  # flake8-slots
    "SIM",   # flake8-simplify
    "TC",    # flake8-type-checking
    "INT",   # flake8-gettext
    "PTH",   # flake8-use-pathlib
    "PERF",  # Perflint
    "FURB",  # refurb
    "RUF",   # Ruff specific
]
ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D107",  # Missing docstring in `__init__`

    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
"scripts/generate_avatar_dataset.py" = ["S320", "T201"]

[tool.ruff.lint.flake8-pytest-style]
parametrize-names-type = "list"        # @pytest.mark.parametrize(['name1', 'name2'], ...)
parametrize-values-row-type = "tuple"  # @pytest.mark.parametrize(['name1', 'name2'], [(1, 2), (3, 4)])
parametrize-values-type = "list"       # @pytest.mark.parametrize('name', [1, 2, 3])


[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-decorators = ["typing.overload"]


[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
combine-as-imports = true
lines-between-types = 1
lines-after-imports = 2
forced-separate = ["tests"]
force-sort-within-sections = false


[tool.ruff.format]
quote-style = "single"
indent-style = "space"

# Respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
